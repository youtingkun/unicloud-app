<view><alert-code class="vue-ref" vue-id="104faf24-1" data-ref="alertCode" bind:__l="__l"></alert-code><view class="tips"><view>schema配置详见uniCloud-aliyun/database下的book.schema.json、order.schema.json</view></view><uni-section vue-id="104faf24-2" title="简单查询" subTitle="在符合schema设置的前提下,直接在前端查询云端数据库的数据" type="line" bind:__l="__l"></uni-section><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getData',['book']]]]]}}" bindtap="__e">查图书book表的数据</button><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getData',['order']]]]]}}" bindtap="__e">查订单order表的数据</button><uni-section vue-id="104faf24-3" title="查询列表分页" subTitle="设置每页查询数量和页码查询" type="line" bind:__l="__l"></uni-section><view class="item"><text>页码：</text><uni-number-box class="num-box1" vue-id="104faf24-4" min="{{1}}" value="{{pageCurrent}}" data-event-opts="{{[['^change',[['e0']]]]}}" bind:change="__e" bind:__l="__l"></uni-number-box></view><view class="item"><text>每页查询数量：</text><uni-number-box class="num-box2" vue-id="104faf24-5" min="{{1}}" value="{{pageSize}}" data-event-opts="{{[['^change',[['e1']]]]}}" bind:change="__e" bind:__l="__l"></uni-number-box></view><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getPageData',['order']]]]]}}" bindtap="__e">分页查图书book表的数据</button><uni-section vue-id="104faf24-6" title="联表查询-订单和图书" subTitle="只需在db schema中，将两个表的关联字段建立映射关系，即可实现联表查询。" type="line" bind:__l="__l"></uni-section><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getOrderByGetTemp',['$event']]]]]}}" bindtap="__e">数据表较大时，高性能查询</button><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getOrder',['$event']]]]]}}" bindtap="__e">数据表较小时，便捷查询</button><uni-section vue-id="104faf24-7" title="getOne" subTitle="使用clientDB时可以在get方法内传入getOne:true来返回一条数据" type="line" bind:__l="__l"></uni-section><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getOneBook',['$event']]]]]}}" bindtap="__e">查询一本图书数据</button><uni-section vue-id="104faf24-8" title="getCount" subTitle="使用clientDB时可以在get方法内传入getCount:true来同时返回总数" type="line" bind:__l="__l"></uni-section><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getBookHasCount',['$event']]]]]}}" bindtap="__e">查询结果返回总数</button><uni-section vue-id="104faf24-9" title="field" subTitle="查询时可以使用field方法指定返回字段，在<uni-clientDB>组件中也支持field属性。不使用field方法时会返回所有字段" type="line" bind:__l="__l"></uni-section><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getBookTitle',['$event']]]]]}}" bindtap="__e">仅查询图书数据的书名</button><uni-section vue-id="104faf24-10" title="name as cname" subTitle="如：author as book_author，意思是将数据库的author字段重命名为book_author" type="line" bind:__l="__l"></uni-section><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getBookAs',['$event']]]]]}}" bindtap="__e">获得被设置别名的数据</button><uni-section vue-id="104faf24-11" title="orderBy" subTitle="orderBy方法内可以传入一个字符串来指定排序规则。如:订单表order根据quantity销量字段排序" type="line" bind:__l="__l"></uni-section><button type="primary" plain="{{true}}" data-event-opts="{{[['tap',[['getOrderOrderBy',['quantity asc']]]]]}}" bindtap="__e">按销量升序</button><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getOrderOrderBy',['create_date desc']]]]]}}" bindtap="__e">按创建时间降序</button><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getOrderOrderBy',['quantity asc, create_date desc']]]]]}}" bindtap="__e">销量相同时，按创建时间降序</button><uni-section vue-id="104faf24-12" title="查询树形数据" subTitle="树形数据，在数据库里一般不会按照tree的层次来存储，因为按tree结构通过json对象的方式存储不同层级的数据，不利于对tree上的某个节点单独做增删改查。一般存储树形数据，tree上的每个节点都是一条单独的数据表记录，然后通过类似parent_id来表达父子关系。如部门的数据表，里面有2条数据，一条数据记录是“总部”，parent_id为空；另一条数据记录“一级部门A”，parent_id为总部的_id" type="line" bind:__l="__l"></uni-section><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['getTreeFn',['$event']]]]]}}" bindtap="__e">查询树形数据</button><uni-section vue-id="104faf24-13" title="新增数据记录add" subTitle="获取到db的表对象后，通过add方法新增数据记录" type="line" bind:__l="__l"></uni-section><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['addData2TestDb']]]]}}" bindtap="__e"><text>在test表里新增一条
			"data=当前时间戳"的记录</text></button><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['addMoreData2TestDb']]]]}}" bindtap="__e"><text>在test表里新增5条
			"data=随机数"的记录</text></button><uni-section vue-id="104faf24-14" title="更新数据记录update" subTitle="collection.doc().update(Object data)" type="line" bind:__l="__l"></uni-section><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['updateData2TestDb']]]]}}" bindtap="__e"><text>更新test表里的一条记录</text></button><uni-section vue-id="104faf24-15" title="删除数据记录remove" subTitle="获取到db的表对象，然后指定要删除的记录，通过remove方法删除。" type="line" bind:__l="__l"></uni-section><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['removeData2TestDb']]]]}}" bindtap="__e"><text>删除test表里的一条记录</text></button><button plain="{{true}}" type="primary" data-event-opts="{{[['tap',[['removeAllData2TestDb']]]]}}" bindtap="__e"><text>删除test表里的所有数据</text></button></view>